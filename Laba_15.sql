USE K_UNIVER;

SELECT * FROM FACULTY


-- TASK 1
DROP FUNCTION COUNT_STUDENTS;
GO
CREATE FUNCTION COUNT_STUDENTS( @FACULTY VARCHAR(20) = 'ХТиТ' )
	RETURNS INT
	BEGIN
		RETURN ( SELECT COUNT( * ) FROM STUDENT
							JOIN GROUPS
								ON GROUPS.IDGROUP = STUDENT.IDGROUP
							JOIN FACULTY
								ON FACULTY.FACULTY = GROUPS.FACULTY AND
									 FACULTY.FACULTY = @FACULTY )
	END;


SELECT  dbo.COUNT_STUDENTS('ХТиТ');
GO

SELECT * FROM PROFESSION
GO
ALTER FUNCTION  COUNT_STUDENTS( @FACULTY VARCHAR(20) = 'ХТиТ', @PROF VARCHAR(20) )
	RETURNS INT
	BEGIN
		RETURN ( SELECT COUNT( * ) FROM STUDENT
							JOIN GROUPS
								ON GROUPS.IDGROUP = STUDENT.IDGROUP
							JOIN FACULTY
								ON FACULTY.FACULTY = GROUPS.FACULTY AND
									 FACULTY.FACULTY = @FACULTY
							JOIN PROFESSION
								ON PROFESSION.FACULTY = FACULTY.FACULTY AND
									 PROFESSION.QUALIFICATION = @PROF )
	END;

SELECT dbo.COUNT_STUDENTS('ХТиТ', 'инженер-механик');
GO

SELECT * FROM SUBJECT
-- TASK 2
GO

CREATE FUNCTION FSUBJECT ( @P VARCHAR(20) )
	RETURNS VARCHAR(300)
	BEGIN
		DECLARE @STR_1 VARCHAR(20), @STR VARCHAR(300) = 'DISCIPLINE: ';
		DECLARE SUB_CURSOR_SL CURSOR LOCAL
			FOR SELECT SUBJECT.SUBJECT FROM SUBJECT 
						WHERE SUBJECT.PULPIT = @P;

		OPEN SUB_CURSOR_SL;
		FETCH SUB_CURSOR_SL INTO @STR_1;
		WHILE @@FETCH_STATUS = 0
			BEGIN
				SET @STR = @STR + ', ' + RTRIM( @STR_1 );
				FETCH SUB_CURSOR_SL INTO @STR_1;
			END

		RETURN @STR;
	END;

SELECT PULPIT.PULPIT, dbo.FSUBJECT( PULPIT.PULPIT ) FROM PULPIT;

SELECT * FROM FACULTY;
SELECT * FROM PULPIT;

GO
-- TASK 3
CREATE FUNCTION FFACPUL( @F VARCHAR(20), @P VARCHAR(20) )
	RETURNS TABLE
	AS RETURN 
		SELECT FACULTY.FACULTY, PULPIT.PULPIT
			FROM FACULTY LEFT JOIN PULPIT
				ON FACULTY.FACULTY = PULPIT.FACULTY
			WHERE
				FACULTY.FACULTY = ISNULL( @F, FACULTY.FACULTY ) AND
				PULPIT.PULPIT = ISNULL( @P, PULPIT.PULPIT);


SELECT * FROM dbo.FFACPUL( NULL, NULL );
SELECT * FROM dbo.FFACPUL( 'ТОВ', NULL );
SELECT * FROM dbo.FFACPUL( NULL, 'ИСиТ' );
SELECT * FROM dbo.FFACPUL( 'ЛХФ', 'В' );

SELECT * FROM TEACHER
GO
-- TASK 4
CREATE FUNCTION FCTEACHER( @P VARCHAR(20) )
	RETURNS INT
	BEGIN
		RETURN 
		( SELECT COUNT( * ) FROM TEACHER
				WHERE TEACHER.PULPIT = ISNULL( @P, TEACHER.PULPIT) );
	END;


SELECT PULPIT.PULPIT, dbO.FCTEACHER( PULPIT.PULPIT ) FROM PULPIT;
SELECT dbO.FCTEACHER( NULL );

-- функции
-- табличная функция с параметрами придумать
USE [Laba_2.1]

CREATE FUNCTION DOP( @COMP_NAME VARCHAR(20), @CREDIT_NAME VARCHAR(20) )
	RETURNS TABLE
	AS RETURN 
		SELECT Company.name_company, Credit.name_type_of_credit
			FROM Company
				JOIN Delivery
					ON Delivery.company_id = Company.company_id
				JOIN Credit
					ON Delivery.credit_id = Credit.credit_id
			WHERE
				Company.name_company = ISNULL( @COMP_NAME, Company.name_company ) AND
				Credit.name_type_of_credit = ISNULL( @CREDIT_NAME, Credit.name_type_of_credit);


SELECT * FROM dbo.DOP( NULL, NULL );
SELECT * FROM dbo.DOP( 'Б', NULL );
SELECT * FROM dbo.DOP( NULL, 'с' );
SELECT * FROM dbo.DOP( 'н', 'T' );