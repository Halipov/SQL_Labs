USE K_UNIVER
GO

-- 1
SP_HELPINDEX AUDITORIUM;
GO
SP_HELPINDEX AUDITORIUM_TYPE;
GO
SP_HELPINDEX FACULTY;
GO
SP_HELPINDEX GROUPS;
GO
SP_HELPINDEX PROFESSION;
GO
SP_HELPINDEX PROGRESS;
GO
SP_HELPINDEX PULPIT;
GO
SP_HELPINDEX STUDENT;
GO

-- 2
DROP TABLE #TASK_2;
GO

CREATE TABLE #TASK_2(
	F1 INT,
	F2 VARCHAR(100)
);

SET NOCOUNT ON;
DECLARE @I INT = 0;
WHILE @I < 1000
	BEGIN
		INSERT #TASK_2 ( F1, F2 )
			VALUES ( FLOOR( 20000 * RAND( ) ),REPLICATE( 'STRING', 10 ) );
		SET @I = @I + 1; 
	END
GO

DROP INDEX #TASK_2_INDEX ON #TASK_2
CREATE CLUSTERED INDEX #TASK_2_INDEX ON #TASK_2(F1 ASC);

-------
SELECT * FROM #TASK_2
	WHERE F1 BETWEEN 1500 AND 2500 ORDER BY F1;
GO
-------


CHECKPOINT 
DBCC DROPCLEANBUFFERS

-- 3
DROP TABLE #TASK_3
CREATE TABLE #TASK_3(
	F1 INT,
	F2 INT IDENTITY,
	F3 VARCHAR(100)
);

SET NOCOUNT ON;
DECLARE @I INT = 0;
WHILE @I < 20000
	BEGIN
		INSERT #TASK_3 ( F1, F3 )
			VALUES ( FLOOR( 20000 * RAND( ) ),REPLICATE( 'STRING', 10 ) );
		SET @I = @I + 1; 
	END
GO

SELECT COUNT(*) FROM #TASK_3;
SELECT * FROM #TASK_3;
 
CREATE INDEX #TASK_3_INDEX ON #TASK_3( F1, F2 );

SELECT * FROM #TASK_3 WHERE F1 > 3000 AND F2 < 6000;
SELECT * FROM #TASK_3 ORDER BY F1, F2

SELECT * FROM #TASK_3 WHERE F1 = 895 AND F2 > 74

-- 4

CREATE TABLE #TASK_4(
	F1 INT,
	F2 INT IDENTITY,
	F3 VARCHAR(100)
);

SET NOCOUNT ON;
DECLARE @I INT = 0;
WHILE @I < 20000
	BEGIN
		INSERT #TASK_4 ( F1, F3 )
			VALUES ( FLOOR( 20000 * RAND( ) ),REPLICATE( 'STRING', 10 ) );
		SET @I = @I + 1; 
	END
GO

SELECT F2 FROM #TASK_4 WHERE F1 > 17000;

DROP INDEX #TASK_4_INDEX ON #TASK_4
CREATE INDEX #TASK_4_INDEX ON #TASK_4 (F1) INCLUDE (F2)

-- 5

CREATE TABLE #TASK_5(
	F1 INT,
	F2 INT IDENTITY,
	F3 VARCHAR(100)
);

SET NOCOUNT ON;
DECLARE @I INT = 0;
WHILE @I < 20000
	BEGIN
		INSERT #TASK_5 ( F1, F3 )
			VALUES ( FLOOR( 20000 * RAND( ) ),REPLICATE( 'STRING', 10 ) );
		SET @I = @I + 1; 
	END
GO

SELECT F1 FROM #TASK_5 WHERE F1 BETWEEN 5000 AND 18755;
SELECT F1 FROM #TASK_5 WHERE F1 > 6541 AND F1 < 18966;
SELECT F1 FROM #TASK_5 WHERE F1 = 6547;

CREATE INDEX #TASK_5_INDEX_1 ON #TASK_5( F1 ) WHERE ( F1 > 5000 AND F1 < 18755 );
CREATE INDEX #TASK_5_INDEX_2 ON #TASK_5( F1 ) WHERE ( F1 > 6541 AND F1 < 18966 );
CREATE INDEX #TASK_5_INDEX_3 ON #TASK_5( F1 ) WHERE ( F1 = 6547 );

-- 6
DROP TABLE TASK_6

CREATE TABLE TASK_6(
	F1 INT,
	F2 INT IDENTITY,
	F3 VARCHAR(100)
);

SET NOCOUNT ON;
DECLARE @I INT = 0;
WHILE @I < 20000
	BEGIN
		INSERT TASK_6 ( F1, F3 )
			VALUES ( FLOOR( 20000 * RAND( ) ),REPLICATE( 'STRING', 10 ) );
		SET @I = @I + 1; 
	END
GO

CREATE INDEX TASK_6_INDEX ON TASK_6( F1 );

SELECT NAME, AVG_FRAGMENTATION_IN_PERCENT
	FROM SYS.dm_db_index_physical_stats( DB_ID(N'K_UNIVER'),
				OBJECT_ID(N'TASK_6_INDEX'), NULL, NULL, NULL ) AS SS
	JOIN SYS.indexes AS II
		ON SS.object_id =  II.object_id 
			 AND SS.index_id = II.index_id
	WHERE NAME LIKE 'TASK%';

INSERT TOP(10000) TASK_6( F1, F3 ) SELECT F1, F3 FROM TASK_6

SELECT * FROM TASK_6

DBCC SHOWCONTIG('TASK_6')

ALTER INDEX TASK_6_INDEX ON TASK_6 REORGANIZE

ALTER INDEX TASK_6_INDEX ON TASk_6 REBUILD WITH ( ONLINE = OFF )

-- 7
DROP INDEX TASK_6_INDEX ON TASK_6

CREATE INDEX TASK_7_INDEX ON TASK_6( F1 )
	WITH FILLFACTOR = 65;

INSERT TOP(50) PERCENT INTO TASK_6( F1, F3 )
	SELECT F1, F3 FROM TASK_6;
