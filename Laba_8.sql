USE K_UNIVER;

-- TASK 1
SELECT 
	MAX( AUDITORIUM_CAPACITY ) AS MaxCap,
	MIN( AUDITORIUM_CAPACITY ) AS MinCap,
	AVG( AUDITORIUM_CAPACITY ) AS AvgCap,
	SUM( AUDITORIUM_CAPACITY ) AS SummCap,
	COUNT( * ) AS CountAud
	FROM AUDITORIUM;
	 
-- TASK 2
SELECT
	AUDITORIUM_TYPE.AUDITORIUM_TYPENAME,
	MAX( AUDITORIUM.AUDITORIUM_CAPACITY ) AS MaxCap,
	MIN( AUDITORIUM.AUDITORIUM_CAPACITY ) AS MinCap,
	AVG( AUDITORIUM.AUDITORIUM_CAPACITY ) AS AvgCap,
	SUM( AUDITORIUM.AUDITORIUM_CAPACITY ) AS SummCap,
	COUNT( * ) AS CountAud
	FROM AUDITORIUM_TYPE JOIN  AUDITORIUM
		ON AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE
		GROUP BY AUDITORIUM_TYPE.AUDITORIUM_TYPENAME

-- TASK 3
SELECT * FROM
	( SELECT 
			CASE 
				WHEN NOTE BETWEEN 4 AND 5 THEN '4-5'
				WHEN NOTE BETWEEN 6 AND 7 THEN '6-7'
				WHEN NOTE BETWEEN 8 AND 9 THEN '8-9'
				WHEN NOTE = 10 THEN '10'
				ELSE 'UPS'
			END AS 'ŒˆÂÌÍË',
			COUNT( * ) AS ' ÓÎË˜ÂÒÚ‚Ó'
		FROM PROGRESS GROUP BY 
			CASE
				WHEN NOTE BETWEEN 4 AND 5 THEN '4-5'
				WHEN NOTE BETWEEN 6 AND 7 THEN '6-7'
				WHEN NOTE BETWEEN 8 AND 9 THEN '8-9'
				WHEN NOTE = 10 THEN '10'
				ELSE 'UPS'
			END ) AS T
		ORDER BY 
			CASE T.ŒˆÂÌÍË
				WHEN '4-5' THEN 4
				WHEN '6-7' THEN 3
				WHEN '8-9' THEN 2
				WHEN '10' THEN 1
			END;


-- TASK 4
SELECT FACULTY.FACULTY AS ‘¿ ”À‹“≈“,
			 GROUPS.PROFESSION AS —œ≈÷»¿À‹ÕŒ—“‹, 
			 ( GROUPS.YEAR_FIRST - 2010 + 1 ) AS [ ”–—],
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			 FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS 
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				GROUP BY  GROUPS.PROFESSION, FACULTY.FACULTY, GROUPS.YEAR_FIRST
				ORDER BY —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿ DESC;
					  

-- TASK 5
SELECT FACULTY.FACULTY AS ‘¿ ”À‹“≈“,
			 GROUPS.PROFESSION AS —œ≈÷»¿À‹ÕŒ—“‹, 
			 ( GROUPS.YEAR_FIRST - 2010 + 1 ) AS [ ”–—],
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿,
			 PROGRESS.SUBJECT
			 FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS 
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE PROGRESS.SUBJECT = '¡ƒ' OR PROGRESS.SUBJECT = 'Œ¿Ëœ'
				GROUP BY  GROUPS.PROFESSION, FACULTY.FACULTY, GROUPS.YEAR_FIRST,  PROGRESS.SUBJECT
				ORDER BY —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿ DESC;

-- TASK 6
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT,
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			 FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE FACULTY.FACULTY = 'œ»Ã'
				GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT


-- TASK 6.1 
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT,
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			 FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE FACULTY.FACULTY = 'œ»Ã'
				GROUP BY ROLLUP( GROUPS.PROFESSION, PROGRESS.SUBJECT )

-- TASK 7
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT,
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			 FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE FACULTY.FACULTY = 'œ»Ã'
				GROUP BY CUBE( GROUPS.PROFESSION, PROGRESS.SUBJECT )

-- TASK 8
SELECT FACULTY.FACULTY, GROUPS.PROFESSION,
			 PROGRESS.SUBJECT, 
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			  FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE FACULTY.FACULTY = '“Œ¬'
				GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION,
				PROGRESS.SUBJECT
UNION 
SELECT FACULTY.FACULTY, GROUPS.PROFESSION,
			 PROGRESS.SUBJECT, 
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			  FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE FACULTY.FACULTY = 'œ»Ã'
				GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION,
				PROGRESS.SUBJECT


-- TACK 9
SELECT FACULTY.FACULTY, GROUPS.PROFESSION,
			 PROGRESS.SUBJECT, 
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			  FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE FACULTY.FACULTY = '“Œ¬'
				GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION,
				PROGRESS.SUBJECT
INTERSECT 
SELECT FACULTY.FACULTY, GROUPS.PROFESSION,
			 PROGRESS.SUBJECT, 
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			  FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE FACULTY.FACULTY = 'œ»Ã'
				GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION,
				PROGRESS.SUBJECT

-- TACK 10
SELECT FACULTY.FACULTY, GROUPS.PROFESSION,
			 PROGRESS.SUBJECT, 
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			  FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE FACULTY.FACULTY = '“Œ¬'
				GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION,
				PROGRESS.SUBJECT
EXCEPT 
SELECT FACULTY.FACULTY, GROUPS.PROFESSION,
			 PROGRESS.SUBJECT, 
			 ROUND( AVG( PROGRESS.NOTE ), 2 ) AS —–≈ƒÕﬂﬂ_Œ÷≈Õ ¿
			  FROM GROUPS
				JOIN FACULTY
					ON GROUPS.FACULTY = FACULTY.FACULTY
				JOIN STUDENT
					ON STUDENT.IDGROUP = GROUPS.IDGROUP
				JOIN PROGRESS
					ON PROGRESS.IDSTUDENT = STUDENT.IDSTUDENT
				WHERE FACULTY.FACULTY = 'œ»Ã'
				GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION,
				PROGRESS.SUBJECT

-- TASK 11
SELECT PROGRESS.SUBJECT, PROGRESS.NOTE, COUNT( PROGRESS.IDSTUDENT ) AS KOLVO
	FROM PROGRESS
	GROUP BY PROGRESS.SUBJECT, PROGRESS.NOTE
	HAVING PROGRESS.NOTE = 8 OR PROGRESS.NOTE = 9

SELECT T1.SUBJECT, T1.NOTE,
	( SELECT COUNT( * ) FROM PROGRESS T2
			WHERE T2.SUBJECT = T1.SUBJECT AND T2.NOTE = T1.NOTE ) AS KOLVO
	FROM PROGRESS T1
	GROUP BY T1.SUBJECT, T1.NOTE
	HAVING T1.NOTE = 8 OR T1.NOTE = 9



